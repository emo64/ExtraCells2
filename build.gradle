buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext.buildProps = file "build.properties"

version = "NIGHTLY"
if (System.getenv("BUILD_NUMBER") != null) {
	version = "${System.getenv("BUILD_NUMBER")}"
}
if (System.getenv("DRONE_BUILD_NUMBER") != null) {
	version = "${System.getenv("DRONE_BUILD_NUMBER")}"
}

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}b" + getBuildNumber()
group = "extracells"
archivesBaseName = "ExtraCells"
def actualVersion = version

logger.lifecycle "$archivesBaseName-$version"
logger.lifecycle "" + version

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}-${config.version.minecraft}"
    runDir = "../../MinecraftDebug/run_client"
}

repositories {
    maven {
        name 'Mobius Repo'
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
	
	maven {
		name 'Open Computers'
		url "http://maven.cil.li/"
	}
	
	// maven {
    //     name = 'IGW'
    //     url = "http://maven.k-4u.nl/"
    // }

    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
	
	// ivy { 
	// 	name 'WirelessCraftingTerminal' 
	// 	artifactPattern "http://addons-origin.cursecdn.com/files/${config.cf.wc}/[module]-[revision].[ext]" 
	// } 

}

dependencies {
	compile files("G:/Users/e/Desktop/Applied-Energistics-2/build/libs/appliedenergistics2-rv3-alpha-0.jar")
	compile ("mcp.mobius.waila:Waila:${config.version.waila}"){
        transitive = false
	}
    compile "appeng:mekanism:1.7.10-8.0.1.198:api"
    compile "li.cil.oc:OpenComputers:${config.version.oc}:dev"
	compile "codechicken:CodeChickenLib:${config.version.minecraft}-${config.version.ccl}:dev"
    compile "codechicken:CodeChickenCore:${config.version.minecraft}-${config.version.ccc}:dev"
    compile "codechicken:NotEnoughItems:${config.version.minecraft}-${config.version.nei}:dev"
	// compile "igwmod:IGW-Mod-${config.version.minecraft}:${config.version.igw}:userdev"

    compile name: "buildcraft", version: "${config.version.bc}", classifier: "dev", ext: 'jar'
	
	// compile name: 'WirelessCraftingTerminal', version: config.version.wc, ext: 'jar'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}", 'mcversion': project.minecraft.version
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.scala
    from sourceSets.main.java
    appendix = 'deobf'
}

artifacts {
    archives deobfJar
}

def getBuildNumber() {
    if (System.getenv("BUILD_NUMBER") != null) {
        return "${System.getenv("BUILD_NUMBER")}"
    }
    else if (System.getenv("DRONE_BUILD_NUMBER") != null) {
        return "${System.getenv("DRONE_BUILD_NUMBER")}"
    }
    return "NIGHTLY"
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}
